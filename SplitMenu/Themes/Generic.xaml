<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:SplitMenu"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <!--
            we only bring in the dictionaries for controls which were "invented"
            as part of Material Design in XAML Toolkit. Other themes, for existing controls
            must be selected manually by the user, so that they override default styles.
            The easiest way to do this is include:

            MaterialDesignTheme.Defaults.xaml
            in your App.xaml
        -->
        <ResourceDictionary Source="pack://application:,,,/SplitMenu;component/Themes/HamburgerButton.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <local:DatabindingDebugConverter x:Key="Debug"/>

    <SolidColorBrush x:Key="SplitMenuBackgroundBrush" Color="#2f2f2f" />

    <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="SplitViewForegroundBrush" Color="Black" />

    <SolidColorBrush x:Key="MenuButtonBackgroundBrush" Color="#ff444444" />
    <SolidColorBrush x:Key="MenuButtonPressedBackgroundBrush" Color="#ff000000" />
    <SolidColorBrush x:Key="MenuButtonHoverBackgroundBrush" Color="#ff555555" />
    <SolidColorBrush x:Key="MenuButtonCheckedBackgroundBrush" Color="#ff444444" />
    <SolidColorBrush x:Key="MenuButtonCheckedPressedBackgroundBrush" Color="#ff000000" />
    <SolidColorBrush x:Key="MenuButtonCheckedHoverBackgroundBrush" Color="#ff555555" />

    <SolidColorBrush x:Key="NavButtonBackgroundBrush" Color="#ff222222" />
    <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="#bb007aff" />
    <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="#99007aff" />
    <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="#ff007aff" />
    <SolidColorBrush x:Key="NavButtonCheckedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="#bb007aff" />
    <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="#99007aff" />
    <SolidColorBrush x:Key="DefaultForegroundBrush" Color="#ffffffff" />

    <sys:Double x:Key="SplitViewNormalNavFontSize">14</sys:Double>
    <sys:Double x:Key="SplitViewLargeNavFontSize">20</sys:Double>
    <sys:Double x:Key="SplitViewBackButtonHeight">32</sys:Double>
    <SolidColorBrush x:Key="RadioButtonContentDisabledForegroundThemeBrush" Color="#66FFFFFF" />
    <SolidColorBrush x:Key="FocusVisualBlackStrokeThemeBrush" Color="Black" />
    <SolidColorBrush x:Key="FocusVisualWhiteStrokeThemeBrush" Color="White" />

    <Style x:Key="SplitViewMenuButtonStyle" TargetType="{x:Type local:SplitMenuItem}">
        <Setter Property="Background" Value="{StaticResource MenuButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource SplitViewForegroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitMenuItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHoverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedPressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextContent" Storyboard.TargetProperty="TextBlock.Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitMenu}}, Path=IconWidth}" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitMenu}}, Path=IconWidth}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <Grid.Resources />

                            <!--  background  -->
                            <Grid x:Name="UnCheckedBackground" Grid.ColumnSpan="3">
                                <Rectangle x:Name="PressedBackground"
                                           Fill="{StaticResource MenuButtonPressedBackgroundBrush}"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="HoverBackground"
                                           Fill="{StaticResource MenuButtonHoverBackgroundBrush}"
                                           Visibility="Collapsed" />
                            </Grid>
                            <Grid x:Name="CheckedBackground"
                                  Grid.ColumnSpan="3"
                                  Background="{StaticResource MenuButtonCheckedBackgroundBrush}"
                                  Visibility="Collapsed">
                                <Rectangle x:Name="CheckedPressedBackground"
                                           Fill="{StaticResource MenuButtonCheckedPressedBackgroundBrush}"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="CheckedHoverBackground"
                                           Fill="{StaticResource MenuButtonCheckedHoverBackgroundBrush}"
                                           Visibility="Collapsed" />
                            </Grid>

                            <!--  focus  -->
                            <Rectangle x:Name="FocusVisualWhite"
                                       Opacity="0"
                                       Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeDashArray="1,1"
                                       StrokeDashOffset="1.5"
                                       StrokeEndLineCap="Square" />
                            <Rectangle x:Name="FocusVisualBlack"
                                       Opacity="0"
                                       Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeDashArray="1,1"
                                       StrokeDashOffset="0.5"
                                       StrokeEndLineCap="Square" />

                            <ContentPresenter x:Name="IconContent"
                                              Grid.Column="0"
                                              Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Icon}"
                                              TextBlock.FontSize="{StaticResource SplitViewNormalNavFontSize}"
                                              TextBlock.Foreground="{StaticResource DefaultForegroundBrush}" />

                            <ContentPresenter x:Name="TextContent"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{StaticResource SplitViewNormalNavFontSize}"
                                              TextBlock.Foreground="{StaticResource DefaultForegroundBrush}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SplitViewNavButtonStyle" TargetType="{x:Type local:SplitMenuItem}">
        <Setter Property="Background" Value="{StaticResource NavButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="8,-2,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="GroupName" Value="Primary" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitMenuItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedHoverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedPressedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Glyph"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource NavButtonCheckedForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextContent"
                                                                       Storyboard.TargetProperty="TextBlock.Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource NavButtonCheckedForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitMenu}}, Path=IconWidth}" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitMenu}}, Path=IconWidth}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <!--  background  -->
                            <Grid x:Name="UnCheckedBackground" Grid.ColumnSpan="3">
                                <Rectangle x:Name="PressedBackground"
                                           Fill="{StaticResource NavButtonPressedBackgroundBrush}"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="HoverBackground"
                                           Fill="{StaticResource NavButtonHoverBackgroundBrush}"
                                           Visibility="Collapsed" />
                            </Grid>
                            <Grid x:Name="CheckedBackground"
                                  Grid.ColumnSpan="3"
                                  Background="{StaticResource NavButtonCheckedBackgroundBrush}"
                                  Visibility="Collapsed">
                                <Rectangle x:Name="CheckedPressedBackground"
                                           Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="CheckedHoverBackground"
                                           Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"
                                           Visibility="Collapsed" />
                            </Grid>

                            <!--  glyph  -->
                            <ContentPresenter x:Name="IconContent"
                                              Grid.Column="0"
                                              Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Icon}"
                                              TextBlock.FontSize="{StaticResource SplitViewNormalNavFontSize}"
                                              TextBlock.Foreground="{StaticResource DefaultForegroundBrush}" />
                            <!--  text  -->
                            <ContentPresenter x:Name="TextContent"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextBlock.FontSize="{StaticResource SplitViewNormalNavFontSize}"
                                              TextBlock.Foreground="{StaticResource DefaultForegroundBrush}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource RadioButtonContentDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SplitViewNavButtonStyle}" TargetType="{x:Type local:SplitMenuItem}" />

    <Style TargetType="{x:Type local:SplitMenu}">
        <Setter Property="Background" Value="{StaticResource SplitMenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource SplitViewNormalNavFontSize}" />
        <Setter Property="Panel.ZIndex" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="SplitViewMenu"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          Background="{DynamicResource NavButtonBackgroundBrush}">
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <!--  Menu (hamburger) button  -->
                            <ToggleButton x:Name="HamburgerToggleButton"
                                          Margin="2,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Foreground="{DynamicResource DefaultForegroundBrush}"
                                          IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitMenu}},
                                                              Path=IsExpanded}"
                                          Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                            <ItemsPresenter>
                                <ItemsPresenter.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=HamburgerToggleButton, Path=IsChecked}" Value="False">
                                                <Setter Property="ItemsPresenter.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconWidth}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ItemsPresenter.Style>
                            </ItemsPresenter>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemTemplate" Value="{StaticResource SplitViewNavButtonStyle}"/>-->
    </Style>


</ResourceDictionary>
